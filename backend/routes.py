from flask import Blueprint, request, jsonify
from firebase_helper import get_db

bp = Blueprint('responses', __name__)

@bp.route('/responses', methods=['POST'])
def add_response():
    """
    Adds a new emergency response. The unique ID is generated by Firebase.
    """
    data = request.json
    if not data:
        return jsonify({'error': 'No data provided'}), 400

    ref = get_db()
    new_ref = ref.push(data)
    return jsonify({'message': 'Response added', 'id': new_ref.key}), 201

@bp.route('/responses/<response_id>', methods=['PUT'])
def update_response(response_id):
    """
    Updates an existing emergency response with the provided data.
    """
    data = request.json
    if not data:
        return jsonify({'error': 'No data provided'}), 400

    response_ref = get_db().child(response_id)
    if not response_ref.get():
        return jsonify({'error': 'Response not found'}), 404

    response_ref.update(data)
    return jsonify({'message': 'Response updated'}), 200

@bp.route('/responses/<response_id>', methods=['DELETE'])
def delete_response(response_id):
    """
    Deletes an existing emergency response.
    """
    response_ref = get_db().child(response_id)
    if not response_ref.get():
        return jsonify({'error': 'Response not found'}), 404

    response_ref.delete()
    return jsonify({'message': 'Response deleted'}), 200

@bp.route('/responses', methods=['GET'])
def get_responses():
    """
    Retrieves all emergency responses.
    """
    responses = get_db().get()
    return jsonify(responses if responses else {}), 200
